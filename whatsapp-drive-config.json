// ==================== package.json ====================
{
  "name": "whatsapp-google-drive-assistant",
  "version": "1.0.0",
  "description": "WhatsApp-driven Google Drive Assistant with AI summarization",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js"
  },
  "keywords": ["whatsapp", "google-drive", "assistant", "automation"],
  "author": "",
  "license": "MIT",
  "dependencies": {
    "whatsapp-web.js": "^1.23.0",
    "qrcode-terminal": "^0.12.0",
    "googleapis": "^126.0.0",
    "@anthropic-ai/sdk": "^0.24.0"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  }
}

// ==================== .env.example ====================
// Copy this to .env and fill in your values

ANTHROPIC_API_KEY=your_anthropic_api_key_here

// ==================== .gitignore ====================
node_modules/
.wwebjs_auth/
.wwebjs_cache/
credentials.json
token.json
.env
temp_*
*.log

// ==================== README.md ====================

# WhatsApp Google Drive Assistant

A Node.js application that allows you to interact with Google Drive through WhatsApp messages, powered by AI summarization using Claude.

## Features

- üìã **LIST**: View files in any Google Drive folder
- üóëÔ∏è **DELETE**: Remove files from Drive
- üì¶ **MOVE**: Move files between folders
- ‚úèÔ∏è **RENAME**: Rename files
- üì§ **UPLOAD**: Upload files to Drive via WhatsApp
- üìù **SUMMARY**: AI-powered document summarization using Claude

## Prerequisites

1. Node.js v16 or higher
2. Google Cloud Project with Drive API enabled
3. Anthropic API key for Claude AI
4. WhatsApp account

## Setup Instructions

### 1. Install Dependencies

```bash
npm install
```

### 2. Google Drive API Setup

1. Go to [Google Cloud Console](https://console.cloud.google.com/)
2. Create a new project or select existing one
3. Enable Google Drive API
4. Create OAuth 2.0 credentials (Desktop app)
5. Download credentials and save as `credentials.json` in project root
6. Run the app once to authenticate:
   ```bash
   npm start
   ```
7. Visit the authorization URL shown in console
8. Grant permissions and save the token

### 3. Anthropic API Key

1. Get your API key from [Anthropic Console](https://console.anthropic.com/)
2. Create `.env` file:
   ```
   ANTHROPIC_API_KEY=your_api_key_here
   ```

### 4. WhatsApp Authentication

1. Run the application:
   ```bash
   npm start
   ```
2. Scan the QR code with your WhatsApp mobile app
3. Go to: WhatsApp Settings > Linked Devices > Link a Device

## Usage

Send commands to the WhatsApp number where the bot is running:

### Commands

**List files in a folder:**
```
LIST /FolderName
```

**Delete a file:**
```
DELETE /FolderName/file.pdf
```

**Move a file:**
```
MOVE /SourceFolder/file.pdf /DestinationFolder
```

**Rename a file:**
```
RENAME /FolderName oldfile.pdf newfile.pdf
```

**Upload a file:**
1. Attach file to WhatsApp
2. Send with message: `UPLOAD filename.pdf to /FolderName`

**Summarize documents:**
```
SUMMARY /FolderName
```

**Help:**
```
HELP
```

## File Structure

```
whatsapp-google-drive-assistant/
‚îú‚îÄ‚îÄ index.js              # Main application file
‚îú‚îÄ‚îÄ package.json          # Dependencies
‚îú‚îÄ‚îÄ credentials.json      # Google OAuth credentials (not in repo)
‚îú‚îÄ‚îÄ token.json           # Google OAuth token (auto-generated)
‚îú‚îÄ‚îÄ .env                 # Environment variables (not in repo)
‚îú‚îÄ‚îÄ .gitignore          # Git ignore file
‚îî‚îÄ‚îÄ README.md           # This file
```

## Security Notes

‚ö†Ô∏è **Important Security Considerations:**

1. Never commit `credentials.json`, `token.json`, or `.env` to version control
2. Keep your Anthropic API key secure
3. The bot will respond to ANY WhatsApp message it receives
4. Consider implementing user authentication/whitelist for production
5. Monitor API usage to avoid unexpected costs

## Limitations

- PDF text extraction is simplified (consider adding pdf-parse library)
- Summarization limited to first 10,000 characters per document
- Upload feature requires file to be sent with command
- Maximum 5 files summarized per SUMMARY command
- Requires stable internet connection

## Troubleshooting

**QR Code not appearing:**
- Delete `.wwebjs_auth` folder and restart

**Google Drive authentication fails:**
- Verify `credentials.json` is correct
- Delete `token.json` and re-authenticate
- Check Drive API is enabled in Google Cloud Console

**Claude API errors:**
- Verify ANTHROPIC_API_KEY in .env
- Check API usage limits
- Ensure API key has proper permissions

## Development

Run in development mode with auto-reload:
```bash
npm run dev
```

## License

MIT

## Contributing

Pull requests welcome! Please ensure code follows existing patterns.

## Support

For issues, please create a GitHub issue with:
- Node.js version
- Error messages
- Steps to reproduce